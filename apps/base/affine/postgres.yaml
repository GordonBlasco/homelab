apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: affine
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: pgvector/pgvector:pg16
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: affine-env
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: affine-env
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: affine-env
                  key: DB_DATABASE
            - name: POSTGRES_INITDB_ARGS
              value: '--data-checksums'
            - name: POSTGRES_HOST_AUTH_METHOD
              value: 'trust'
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - "pg_isready"
                - "-U"
                - "$(DB_USERNAME)"
                - "-d"
                - "$(DB_DATABASE)"
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - "pg_isready"
                - "-U"
                - "$(DB_USERNAME)"
                - "-d"
                - "$(DB_DATABASE)"
            initialDelaySeconds: 10
            periodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
