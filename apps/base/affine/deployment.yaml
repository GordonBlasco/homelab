apiVersion: apps/v1
kind: Deployment
metadata:
  name: affine
  labels:
    io.kompose.service: affine
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: affine
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: affine
    spec:
      containers:
        - name: affine-server
          image: ghcr.io/toeverything/affine:stable
          ports:
            - containerPort: 3010
              protocol: TCP
          env:
            - name: AFFINE_INDEXER_ENABLED
              value: "false"

            # 1) Pull the DB password from your secret
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: affine-db-secret
                  key: password

            # 2) Build DATABASE_URL using the env var above
            - name: DATABASE_URL
              value: postgresql://affine:$(DB_PASSWORD)@postgres:5432/affine

            # 3) Redis host (service name in same namespace)
            - name: REDIS_SERVER_HOST
              value: redis

          # Optional: keep the rest of your env from ConfigMap if you need it
          envFrom:
            - configMapRef:
                name: env

          volumeMounts:
            - name: affine-claim0
              mountPath: /root/.affine/storage
            - name: affine-claim1
              mountPath: /root/.affine/config

          # (Optional) Add resources if you want
          # resources:
          #   requests:
          #     cpu: "100m"
          #     memory: "256Mi"
          #   limits:
          #     cpu: "1"
          #     memory: "1Gi"

      restartPolicy: Always
      volumes:
        - name: affine-claim0
          persistentVolumeClaim:
            claimName: affine-claim0
        - name: affine-claim1
          persistentVolumeClaim:
            claimName: affine-claim1
